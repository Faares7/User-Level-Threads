globl thread_switch
thread_switch:
    # Save old context
    movl 4(%esp), %eax      # eax = old context pointer
    
    # Save registers to old context
    movl %esp, 0(%eax)      # save stack pointer
    movl %ebp, 4(%eax)      # save base pointer
    movl %ebx, 8(%eax)      # save ebx
    movl %ecx, 12(%eax)     # save ecx  
    movl %edx, 16(%eax)     # save edx
    movl %esi, 20(%eax)     # save esi
    movl %edi, 24(%eax)     # save edi
    
    # Load new context
    movl 8(%esp), %eax      # eax = new context pointer
    
    # Restore registers from new context
    movl 0(%eax), %esp      # restore stack pointer
    movl 4(%eax), %ebp      # restore base pointer
    movl 8(%eax), %ebx      # restore ebx
    movl 12(%eax), %ecx     # restore ecx
    movl 16(%eax), %edx     # restore edx
    movl 20(%eax), %esi     # restore esi
    movl 24(%eax), %edi     # restore edi
    
    ret                     # return to new thread
